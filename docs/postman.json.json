{
	"info": {
		"_postman_id": "0613cbb2-8062-4439-88aa-a66e205cf8ae",
		"name": "Udaconnect API",
		"description": "UdaConnect Project Cloud Native Arch\n\nContact Support:\n Email: devi.25@gmail.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4416245"
	},
	"item": [
		{
			"name": "persons",
			"item": [
				{
					"name": "{personId}",
					"item": [
						{
							"name": "connection",
							"item": [
								{
									"name": "Connection details for person",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/persons/:personId/connection?start_date=<dateTime>&end_date=<dateTime>&distance=<integer>&skip=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"persons",
												":personId",
												"connection"
											],
											"query": [
												{
													"key": "start_date",
													"value": "<dateTime>",
													"description": "(Required) number of records to skip for pagination"
												},
												{
													"key": "end_date",
													"value": "<dateTime>",
													"description": "(Required) number of records to skip for pagination"
												},
												{
													"key": "distance",
													"value": "<integer>",
													"description": "(Required) distance in meters to permit for connection search"
												},
												{
													"key": "skip",
													"value": "<integer>",
													"description": "number of records to skip for pagination"
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "maximum number of records to return"
												}
											],
											"variable": [
												{
													"key": "personId",
													"value": "<integer>"
												}
											]
										}
									},
									"response": [
										{
											"name": "search results matching criteria",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/persons/:personId/connection?start_date=<dateTime>&end_date=<dateTime>&distance=<integer>&skip=<integer>&limit=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"persons",
														":personId",
														"connection"
													],
													"query": [
														{
															"key": "start_date",
															"value": "<dateTime>",
															"description": "(Required) number of records to skip for pagination"
														},
														{
															"key": "end_date",
															"value": "<dateTime>",
															"description": "(Required) number of records to skip for pagination"
														},
														{
															"key": "distance",
															"value": "<integer>",
															"description": "(Required) distance in meters to permit for connection search"
														},
														{
															"key": "skip",
															"value": "<integer>",
															"description": "number of records to skip for pagination"
														},
														{
															"key": "limit",
															"value": "<integer>",
															"description": "maximum number of records to return"
														}
													],
													"variable": [
														{
															"key": "personId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"person\": {\n      \"id\": \"<integer>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"companyName\": \"<string>\"\n    },\n    \"location\": {\n      \"id\": \"<integer>\",\n      \"person\": {\n        \"id\": \"<integer>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"companyName\": \"<string>\"\n      },\n      \"creationTime\": \"<dateTime>\",\n      \"latitude\": \"<number>\",\n      \"longitude\": \"<number>\"\n    }\n  },\n  {\n    \"person\": {\n      \"id\": \"<integer>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"companyName\": \"<string>\"\n    },\n    \"location\": {\n      \"id\": \"<integer>\",\n      \"person\": {\n        \"id\": \"<integer>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"companyName\": \"<string>\"\n      },\n      \"creationTime\": \"<dateTime>\",\n      \"latitude\": \"<number>\",\n      \"longitude\": \"<number>\"\n    }\n  }\n]"
										},
										{
											"name": "Invaid Input Parameter",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/persons/:personId/connection?start_date=<dateTime>&end_date=<dateTime>&distance=<integer>&skip=<integer>&limit=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"persons",
														":personId",
														"connection"
													],
													"query": [
														{
															"key": "start_date",
															"value": "<dateTime>",
															"description": "(Required) number of records to skip for pagination"
														},
														{
															"key": "end_date",
															"value": "<dateTime>",
															"description": "(Required) number of records to skip for pagination"
														},
														{
															"key": "distance",
															"value": "<integer>",
															"description": "(Required) distance in meters to permit for connection search"
														},
														{
															"key": "skip",
															"value": "<integer>",
															"description": "number of records to skip for pagination"
														},
														{
															"key": "limit",
															"value": "<integer>",
															"description": "maximum number of records to return"
														}
													],
													"variable": [
														{
															"key": "personId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get single person info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons/:personId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons",
										":personId"
									],
									"variable": [
										{
											"key": "personId",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "search results matching criteria",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/persons/:personId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"persons",
												":personId"
											],
											"variable": [
												{
													"key": "personId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"companyName\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"companyName\": \"<string>\"\n  }\n]"
								},
								{
									"name": "bad input parameter",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/persons/:personId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"persons",
												":personId"
											],
											"variable": [
												{
													"key": "personId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get all user using the app",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/persons/:personId/connection?start_date=<dateTime>&end_date=<dateTime>&distance=<integer>&skip=<integer>&limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons",
								":personId",
								"connection"
							],
							"query": [
								{
									"key": "start_date",
									"value": "<dateTime>"
								},
								{
									"key": "end_date",
									"value": "<dateTime>"
								},
								{
									"key": "distance",
									"value": "<integer>"
								},
								{
									"key": "skip",
									"value": "<integer>"
								},
								{
									"key": "limit",
									"value": "<integer>"
								}
							],
							"variable": [
								{
									"key": "personId",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "search results matching criteria",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/persons?skip=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>",
											"description": "number of records to skip for pagination"
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "maximum number of records to return"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"companyName\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"companyName\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Invalid Input Paramter",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/persons?skip=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>",
											"description": "number of records to skip for pagination"
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "maximum number of records to return"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "adds a new Person using the app",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"companyName\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/persons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"persons"
							]
						},
						"description": "Adds a person to the system"
					},
					"response": [
						{
							"name": "Person created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"companyName\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/persons",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "invalid input, object invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"companyName\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/persons",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "an existing person already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"companyName\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/persons",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"persons"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "locations",
			"item": [
				{
					"name": "{locationId}",
					"item": [
						{
							"name": "Location detail",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl2}}/locations/:locationId?skip=<integer>&limit=<integer>",
									"host": [
										"{{baseUrl2}}"
									],
									"path": [
										"locations",
										":locationId"
									],
									"query": [
										{
											"key": "skip",
											"value": "<integer>",
											"description": "number of records to skip for pagination"
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "maximum number of records to return"
										}
									],
									"variable": [
										{
											"key": "locationId",
											"value": "<integer>"
										}
									]
								}
							},
							"response": [
								{
									"name": "search results matching criteria",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/locations/:locationId?skip=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												":locationId"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>",
													"description": "number of records to skip for pagination"
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "maximum number of records to return"
												}
											],
											"variable": [
												{
													"key": "locationId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"person\": {\n      \"id\": \"<integer>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"companyName\": \"<string>\"\n    },\n    \"creationTime\": \"<dateTime>\",\n    \"latitude\": \"<number>\",\n    \"longitude\": \"<number>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"person\": {\n      \"id\": \"<integer>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"companyName\": \"<string>\"\n    },\n    \"creationTime\": \"<dateTime>\",\n    \"latitude\": \"<number>\",\n    \"longitude\": \"<number>\"\n  }\n]"
								},
								{
									"name": "Invalid Input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/locations/:locationId?skip=<integer>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"locations",
												":locationId"
											],
											"query": [
												{
													"key": "skip",
													"value": "<integer>",
													"description": "number of records to skip for pagination"
												},
												{
													"key": "limit",
													"value": "<integer>",
													"description": "maximum number of records to return"
												}
											],
											"variable": [
												{
													"key": "locationId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "adds a location item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<integer>\",\n  \"person\": {\n    \"id\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"companyName\": \"<string>\"\n  },\n  \"creationTime\": \"<dateTime>\",\n  \"latitude\": \"<number>\",\n  \"longitude\": \"<number>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl2}}/locations",
							"host": [
								"{{baseUrl2}}"
							],
							"path": [
								"locations"
							]
						},
						"description": "Adds a location to the system"
					},
					"response": [
						{
							"name": "Location created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\",\n  \"person\": {\n    \"id\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"companyName\": \"<string>\"\n  },\n  \"creationTime\": \"<dateTime>\",\n  \"latitude\": \"<number>\",\n  \"longitude\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "invalid input, object invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\",\n  \"person\": {\n    \"id\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"companyName\": \"<string>\"\n  },\n  \"creationTime\": \"<dateTime>\",\n  \"latitude\": \"<number>\",\n  \"longitude\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "an existing item already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\",\n  \"person\": {\n    \"id\": \"<integer>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"companyName\": \"<string>\"\n  },\n  \"creationTime\": \"<dateTime>\",\n  \"latitude\": \"<number>\",\n  \"longitude\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"locations"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:30002/api"
		},
		{
			"key": "baseUrl2",
			"value": "http://localhost:30004/api"
		}
	]
}